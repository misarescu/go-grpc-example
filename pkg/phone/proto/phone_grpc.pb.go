// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.1
// source: pkg/phone/proto/phone.proto

package phone

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PhoneServiceClient is the client API for PhoneService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PhoneServiceClient interface {
	VoiceCall(ctx context.Context, in *Person_PhoneNumber, opts ...grpc.CallOption) (*CallResponse, error)
}

type phoneServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPhoneServiceClient(cc grpc.ClientConnInterface) PhoneServiceClient {
	return &phoneServiceClient{cc}
}

func (c *phoneServiceClient) VoiceCall(ctx context.Context, in *Person_PhoneNumber, opts ...grpc.CallOption) (*CallResponse, error) {
	out := new(CallResponse)
	err := c.cc.Invoke(ctx, "/phone.PhoneService/VoiceCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PhoneServiceServer is the server API for PhoneService service.
// All implementations must embed UnimplementedPhoneServiceServer
// for forward compatibility
type PhoneServiceServer interface {
	VoiceCall(context.Context, *Person_PhoneNumber) (*CallResponse, error)
	mustEmbedUnimplementedPhoneServiceServer()
}

// UnimplementedPhoneServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPhoneServiceServer struct {
}

func (UnimplementedPhoneServiceServer) VoiceCall(context.Context, *Person_PhoneNumber) (*CallResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VoiceCall not implemented")
}
func (UnimplementedPhoneServiceServer) mustEmbedUnimplementedPhoneServiceServer() {}

// UnsafePhoneServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PhoneServiceServer will
// result in compilation errors.
type UnsafePhoneServiceServer interface {
	mustEmbedUnimplementedPhoneServiceServer()
}

func RegisterPhoneServiceServer(s grpc.ServiceRegistrar, srv PhoneServiceServer) {
	s.RegisterService(&PhoneService_ServiceDesc, srv)
}

func _PhoneService_VoiceCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Person_PhoneNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PhoneServiceServer).VoiceCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/phone.PhoneService/VoiceCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PhoneServiceServer).VoiceCall(ctx, req.(*Person_PhoneNumber))
	}
	return interceptor(ctx, in, info, handler)
}

// PhoneService_ServiceDesc is the grpc.ServiceDesc for PhoneService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PhoneService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "phone.PhoneService",
	HandlerType: (*PhoneServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VoiceCall",
			Handler:    _PhoneService_VoiceCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/phone/proto/phone.proto",
}
